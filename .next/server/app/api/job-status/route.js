"use strict";(()=>{var t={};t.id=161,t.ids=[161],t.modules={399:t=>{t.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:t=>{t.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},8893:t=>{t.exports=require("buffer")},4770:t=>{t.exports=require("crypto")},7702:t=>{t.exports=require("events")},2048:t=>{t.exports=require("fs")},2615:t=>{t.exports=require("http")},8791:t=>{t.exports=require("https")},8216:t=>{t.exports=require("net")},5315:t=>{t.exports=require("path")},8621:t=>{t.exports=require("punycode")},6162:t=>{t.exports=require("stream")},2452:t=>{t.exports=require("tls")},7360:t=>{t.exports=require("url")},1568:t=>{t.exports=require("zlib")},4896:(t,e,r)=>{r.r(e),r.d(e,{originalPathname:()=>h,patchFetch:()=>j,requestAsyncStorage:()=>b,routeModule:()=>m,serverHooks:()=>y,staticGenerationAsyncStorage:()=>g});var o={};r.r(o),r.d(o,{GET:()=>f,dynamic:()=>c,maxDuration:()=>l,runtime:()=>d});var s=r(9303),a=r(8716),i=r(3131),n=r(7070),u=r(5662),p=r(7435);let d="nodejs",l=60,c="force-dynamic";async function f(t){try{p.k.info(`Job status API called at ${new Date().toISOString()}`);let{searchParams:e}=new URL(t.url),r=e.get("jobId");if(!r)return p.k.error("Missing jobId parameter"),n.NextResponse.json({error:"Missing jobId parameter"},{status:400});p.k.info(`Checking status for job: ${r}`);let o=function(t){if(!isNaN(Number(t)))return Number(t);let e=t.match(/^(job|debug|test)_(\d+)/);if(e&&!isNaN(Number(e[2])))return Number(e[2]);let r=0;for(let e=0;e<t.length;e++)r=Math.imul(r,31)+t.charCodeAt(e)|0;return Math.abs(r)}(r);p.k.debug(`Job ID conversion: "${r}" -> ${o} (db-compatible)`);let s=await (0,u.jW)(r);if(p.k.info(`Job ${r} status result:`,s),"completed"===s.status&&s.result&&"object"==typeof s.result&&!s.result.processed&&s.result.raw)try{let t=function(t){let e;if(p.k.info("Processing raw OpenAI response",{responseLength:t?.length||0,hasResponse:!!t}),!t)throw p.k.error("Received empty response from OpenAI"),Error("Received empty response from OpenAI");try{let r;let o=((r=t.trim()).startsWith("```")&&r.endsWith("```")&&(r=(r=(r=r.substring(r.indexOf("\n")+1)).substring(0,r.lastIndexOf("```"))).trim()),r);e=JSON.parse(o),p.k.info("Successfully parsed OpenAI response as JSON")}catch(e){throw p.k.error("Failed to parse OpenAI response as JSON:",e),p.k.debug("Raw response:",t.substring(0,200)+"..."),Error(`Failed to parse OpenAI response: ${e.message}`)}let r=function(t){if(!t||"object"!=typeof t)throw p.k.error("Itinerary is not an object",{itinerary:t}),Error("Invalid itinerary format: not an object");let e={id:t.id||`trip-${Date.now()}`,title:t.title||`Trip to ${t.destination||"Destination"}`,destination:t.destination||"Unknown Destination",dates:{start:t.dates?.start||new Date().toISOString().split("T")[0],end:t.dates?.end},days:[],budget:{accommodation:0,food:0,activities:0,transport:0,total:0}};if(Array.isArray(t.days))for(let r=0;r<t.days.length;r++){let o=t.days[r];if(!o||"object"!=typeof o)continue;let s={date:o.date||null,activities:[]};if(Array.isArray(o.activities))for(let t=0;t<o.activities.length;t++){let e=o.activities[t];if(!e||"object"!=typeof e)continue;let a={lat:0,lng:0};e.coordinates&&"object"==typeof e.coordinates&&(a={lat:parseFloat(String(e.coordinates.lat))||0,lng:parseFloat(String(e.coordinates.lng))||0});let i=0;void 0!==e.cost&&(i="number"==typeof e.cost?e.cost:parseFloat(String(e.cost))||0),s.activities.push({id:e.id||`act-${r}-${t}`,time:e.time||"",title:e.title||`Activity ${t+1}`,description:e.description||"",location:e.location||"",coordinates:a,cost:i,image:e.image||""})}e.days.push(s)}if(t.budget&&"object"==typeof t.budget){let r=t.budget,o="number"==typeof r.accommodation?r.accommodation:parseFloat(String(r.accommodation))||0,s="number"==typeof r.food?r.food:parseFloat(String(r.food))||0,a="number"==typeof r.activities?r.activities:parseFloat(String(r.activities))||0,i="number"==typeof r.transport?r.transport:parseFloat(String(r.transport))||0,n="number"==typeof r.total?r.total:parseFloat(String(r.total))||0;(!n||isNaN(n))&&(n=o+s+a+i),e.budget={accommodation:o,food:s,activities:a,transport:i,total:n}}else{let t=0;if(e.days){for(let r of e.days)if(r.activities)for(let e of r.activities)"number"==typeof e.cost&&(t+=e.cost)}e.budget={accommodation:Math.round(.4*t),food:Math.round(.3*t),activities:t,transport:Math.round(.2*t),total:t+Math.round(.4*t)+Math.round(.3*t)+Math.round(.2*t)}}return e}(e);return p.k.info("Successfully processed and normalized itinerary data"),r}(s.result.raw);return n.NextResponse.json({status:s.status,itinerary:t})}catch(t){return p.k.error(`Error processing raw response for job ${r}:`,t),n.NextResponse.json({status:"failed",error:`Error processing response: ${t.message}`})}return p.k.info(`Returning job status: ${s.status}`),n.NextResponse.json({status:s.status,result:s.result,error:s.error})}catch(t){return p.k.error("Error in job status API:",t),n.NextResponse.json({error:`Server error: ${t.message}`},{status:500})}}let m=new s.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/job-status/route",pathname:"/api/job-status",filename:"route",bundlePath:"app/api/job-status/route"},resolvedPagePath:"/Users/ethanhoppe/Desktop/AItravelagent/app/api/job-status/route.ts",nextConfigOutput:"",userland:o}),{requestAsyncStorage:b,staticGenerationAsyncStorage:g,serverHooks:y}=m,h="/api/job-status/route";function j(){return(0,i.patchFetch)({serverHooks:y,staticGenerationAsyncStorage:g})}}};var e=require("../../../webpack-runtime.js");e.C(t);var r=t=>e(e.s=t),o=e.X(0,[276,972,518,662],()=>r(4896));module.exports=o})();